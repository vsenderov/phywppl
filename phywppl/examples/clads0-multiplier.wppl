/**
 * ClaDS0 - Multipliers
 *
 * To run the example use:
 *
 * npm run wppl examples/clads0-multiplier.wppl [N] [TREEPATH] [RHO] [NPART]
 *
 * where [N] is the number of iterations, for example 3
 *       [TREEPATH] path to phyjson tree
 *       [RHO] sampling probability
 *       [NPART] number of particles
 *
 */

var tree = phyjs.read_phyjson(argv["_"][1])
var rho = argv["_"][2]
var particles = argv["_"][3]

var MAX_DIV = 20
var MAX_LAMBDA = 20
var MIN_LAMBDA = 1e-6

/**
 * Model specification
 */
var model = function()
{

    // Test settings to compare with analytical CRBD with mu = 0
    var lambda_0 = 0.2
    var sigma    = 0.1 // Math.sqrt( 1/gamma( { shape: 1, scale: 1/0.2 } ) )
    var alpha    = Math.log(0.95) //Math.exp( gaussian( {mu: 0, sigma: sigma} ) )
    var multip = 1


    // Simulate conditionally on the tree
    // It returns all variables of interest
    var ret = simClaDS0multip( tree, lambda_0, alpha, sigma, rho, multip )

    // Condition on survival
    var max_M = 10000
    var M = M_clads0multipGoesUndetected( tree.age, lambda_0, alpha, sigma, rho, max_M, multip )
    factor(Math.log(M))
    
    return ret

}


/**
 * Inference
  */
var dist = Infer({method: 'SMC', particles: particles, model: model})
dist.normalizationConstant
